#!/usr/bin/env python3
import argparse
import sys
import subprocess
from subprocess import DEVNULL
from netaddr import IPAddress
from netaddr.eui import EUI

def get6(ip):
	cmd = ['ping', '-c 1', ip]
	result = subprocess.run(cmd, stdout=subprocess.PIPE)
	
	cmd = ['arp', '-n', ip]
	result = subprocess.run(cmd, stdout=subprocess.PIPE)
	arp_output = (result.stdout).split()	
	macaddr = (arp_output[3]).decode()
	if macaddr == "(incomplete)":
		pass
	else:
	#	print("{0} => {1}".format(ip,ipv6))
		try:
			mac = EUI(macaddr)
			ipv6 = mac.ipv6(IPAddress('fe80::'))
			print("{0} => {1}".format(ip,ipv6))
		except:
			pass

progdesc = "4to6.py: get IPv6 addresses from IPv4 hosts"
parser = argparse.ArgumentParser(description=progdesc)
parser.add_argument('-i', metavar='IP', help='-i 192.168.1.1')
parser.add_argument('-f', metavar='File', help='-f list_of_hosts.txt')
args = parser.parse_args()

if args.i:
	ip = args.i
	get6(ip)
	sys.exit()

if args.f:
	hostfile = args.f
	with open(hostfile,"r") as file:
		for ip in file:
			get6(ip.rstrip())
	file.close()
	sys.exit()

else:
	print("Use -i for individual IP addresses or -f for a file.")
	sys.exit()

